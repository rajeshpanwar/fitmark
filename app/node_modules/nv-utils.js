exports.parseFunction2 = function (str) {
    var window = {};
    if (typeof str == "function") {
        return str;
    }
    if (typeof str != "string") {
        console.log("NV: ERROR: The function passed should be a valid function or function string");
        console.log(str);
        return;

    }

    if (window[str]) {
        // the string is defined as a function. Return the function as it is
        return window[str];
    }
    // If string name contains only word and dot then it could be some class function
    else if (str.match(/^[\w\.]+$/)) {
        var parts = str.split('.');
        var obj = window[parts.shift()];
        while (obj && parts.length) {
            obj = obj[parts.shift()];
            if (!obj) break;
        }
        if (obj) return obj;
    }
    var match = str.match(/^\s*?function\s*?\(([\s\S]*?)\)\s*?{([\s\S]*?)}\s*?;?\s*$/);
    if (!match || !match[1]) return false;
    var args = match[1].split(",");
    var body = match[2];
    var requireHack = 'var _module = this;' +
        'var require = function (module1) {' +
        'var pattern = /^nv-/;' +
        'if(pattern.test(module1)){' +
        'return _module.require(module1);' +
        '}else{' +
        'res.error(404, "Wrong module [" + module1 +"] specified in hook handlers");' +
        '}' +
        '};';
    //body = "var _module = this; var require = function(module1) {  return _module.require(module1); };" + body;
    body = requireHack + body;
    return Function(args, body);
};

exports.getHost = function (header) {
    console.log('==========here======', header);
    var host = null;
    if (header.host) {
        if (header.host.indexOf('www') == 0) {
            host = header.host;
        }
        else {
            host = 'www.' + header.host;
        }
        if (header.referer && header.referer.indexOf('https') == 0) {
            host = (header['protocol'] ? header['protocol'] : 'https') + '://' + host;
        } else {
            host = (header['protocol'] ? header['protocol'] : 'http') + '://' + host;
        }
    }
    //if (header.origin && header.origin.indexOf('https') == 0) {
    //    host = header.origin;
    //}
    // If host does not contain .co.in then replace www. with blank.
    if (!(host.indexOf('.co.in') > -1 || host.indexOf('.com.au') > -1 || host.indexOf('.net.in') > -1)) {
        var data = host.replace('www.', ''),
            domains = data.split('.');
        if (domains.length > 2) {
            //Removing  www from sub domain case
            host = data;
        }
    }
    return host;
};