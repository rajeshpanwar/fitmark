module.exports = function (parent) {
    parent.get("/entity/:entity", function (req, res, next) {
        req.command = 'list';
        req.entity_name = req.params.entity;
        var request = {
            entityName: req.params.entity,
            executeHooks: true,
            query: req.query
        };
        req.app.list(request, function (err, response) {
            if (err) {
                res.status(err.status);
                res.send(err.data);
            } else {
                res.status(response.status);
                res.send(response.data);
            }
        })
    });
    parent.get("/entity/:entity/:entity_id", function (req, res, next) {
        req.command = 'get';
        req.entity_name = req.params.entity;
        var request = {
            entityName: req.params.entity,
            executeHooks: true,
            query: req.query,
            resourceId: req.params.entity_id
        };
        req.app.get(request, function (err, response) {
            if (err) {
                res.status(err.status);
                res.send(err.data);
            } else {
                res.status(response.status);
                res.send(response.data);
            }
        })
    });
    parent.put('/entity/:entity/:entity_id', function (req, res, next) {
        req.command = 'edit';
        req.entity_name = req.params.entity;
        var request = {
            entityName: req.params.entity,
            executeHooks: true,
            resourceId: req.params.entity_id,
            data: req.body.data
        };
        req.app.update(request, function (err, response) {
            if (err) {
                res.status(err.status);
                res.send(err.data);
            } else {
                res.status(response.status);
                res.send(response.data);
            }
        })
    });
    parent.del('/entity/:entity/:entity_id', function (req, res, next) {
        req.command = 'delete';
        req.entity_name = req.params.entity;
        var request = {
            entityName: req.params.entity,
            executeHooks: true,
            resourceId: req.params.entity_id
        };
        req.app.del(request, function (err, response) {
            if (err) {
                res.status(err.status);
                res.send(err.data);
            } else {
                res.status(response.status);
                res.send(response.data);
            }
        });
    });
    parent.post('/entity/:entity', function (req, res, next) {
        req.command = 'add';
        req.entity_name = req.params.entity;
        if (typeof req.body.data == 'string') {
            req.body.data = JSON.parse(req.body.data);
        }
        var request = {
            entityName: req.params.entity,
            executeHooks: true,
            data: req.body.data
        };
        req.app.add(request, function (err, response) {
            if (err) {
                res.status(err.status);
                res.send(err.data);
            } else {
                res.status(response.status);
                res.send(response.data);
            }
        })
    });
    parent.all('/entity/:entity/_/:command', function (req, res, next) {
        req.command = req.params.command;
        req.entity_name = req.params.entity;
        var request = {
            entityName: req.params.entity,
            query: req.query,
            executeHooks: true,
            data: req.body.data,
            body: req.body.data,  //Not to be used
            files: req.files
        };
        req.app.call(req.params.command, request, function (err, response) {
            if (err) {
                res.status(err.status);
                res.send(err.data);
            } else {
                res.status(response.status);
                res.send(response.data);
            }
        })
    });

    parent.post('/checkout', function (req, res, next) {
        require('nv-payment').payment(req, res, next);
    });
    parent.post('/payment/:registrationFor', function (req, res, next) {
        require('nv-payment').payment(req, res, next);
    });
    parent.post('/handleResponse/:txn_id', function (req, res, next) {
        require('nv-payment').handleResponse(req, res, next);
    });
};